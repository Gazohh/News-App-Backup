{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/keyboard/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;IA+Bf,4BAAiB;;;;IAC7C;;;OAGG;;;;;IAEH,2CAAwB;;;;cAAC,IAAa,KAAU;IAEhD;;OAEG;;;;IAKH,uBAAI;;;mBAAW;IAEf;;OAEG;;;;IAKH,wBAAK;;;mBAAW;IAEhB;;;OAGG;;;;;IAKH,gCAAa;;;;cAAC,OAAgB,KAAU;IAExC;;;OAGG;;;;;IAMH,iCAAc;;;;;QACZ,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAMH,iCAAc;;;;;QACZ,MAAM,CAAC;KACR;;gBA7DF,UAAU;;;QAMR,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;4DACwB;;QAK/C,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SACnD,CAAC;;;;wCACa;;QAKd,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;;yCACc;;QAMf,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;SAC9B,CAAC;;;;iDACsC;;QAMvC,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,qBAAqB;YAC5B,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;wCACgB,UAAU;kDAE3B;;QAMA,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,qBAAqB;YAC5B,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;wCACgB,UAAU;kDAE3B;;;;;;;;;;;;;;;;;;;;;;IA5DU,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,0BAA0B;YACrC,IAAI,EAAE,qDAAqD;YAC3D,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,CAAC;SAC1D,CAAC;OAEW,QAAQ,EA6DpB;mBA9FD;EAiC8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * @name Keyboard\n * @description\n * Keyboard plugin for Cordova.\n *\n * Requires Cordova plugin: `ionic-plugin-keyboard`. For more info, please see the [Keyboard plugin docs](https://github.com/ionic-team/ionic-plugin-keyboard).\n *\n * @usage\n * ```typescript\n * import { Keyboard } from '@ionic-native/keyboard';\n *\n * constructor(private keyboard: Keyboard) { }\n *\n * ...\n *\n * this.keyboard.show();\n *\n * this.keyboard.close();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Keyboard',\n  plugin: 'ionic-plugin-keyboard',\n  pluginRef: 'cordova.plugins.Keyboard',\n  repo: 'https://github.com/ionic-team/ionic-plugin-keyboard',\n  platforms: ['Android', 'BlackBerry 10', 'iOS', 'Windows']\n})\n@Injectable()\nexport class Keyboard extends IonicNativePlugin {\n  /**\n   * Hide the keyboard accessory bar with the next, previous and done buttons.\n   * @param hide {boolean}\n   */\n  @Cordova({ sync: true })\n  hideKeyboardAccessoryBar(hide: boolean): void {}\n\n  /**\n   * Force keyboard to be shown.\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['Android', 'BlackBerry 10', 'Windows']\n  })\n  show(): void {}\n\n  /**\n   * Close the keyboard if open.\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\n  })\n  close(): void {}\n\n  /**\n   * Prevents the native UIScrollView from moving when an input is focused.\n   * @param disable {boolean}\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS', 'Windows']\n  })\n  disableScroll(disable: boolean): void {}\n\n  /**\n   * Creates an observable that notifies you when the keyboard is shown. Unsubscribe to observable to cancel event watch.\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'native.keyboardshow',\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\n  })\n  onKeyboardShow(): Observable<any> {\n    return;\n  }\n\n  /**\n   * Creates an observable that notifies you when the keyboard is hidden. Unsubscribe to observable to cancel event watch.\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'native.keyboardhide',\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\n  })\n  onKeyboardHide(): Observable<any> {\n    return;\n  }\n}\n"]}